install.packages(devtools)
install.packages('devtools')
devtools::install_github("zeehio/facetscales")
runApp('Desktop/GitHub/M_D_Australia/App')
ws <- read.csv("WS.csv")
to_find <- read.csv("FIND.csv")
ws <- read.csv("WS.csv")
to_find <- read.csv("FIND.csv")
View(ws)
View(to_find)
View(ws)
found <- to_find$KODE %in% ws$KODE
found
found <- to_find$KODE %in% ws$KODE
table(found)
ws <- read.csv("WS.csv")
to_find <- read.csv("FIND.csv")
found <- to_find$KODE %in% ws$KODE
table(found)
to_find[found]
to_find[found,]
exist <- to_find[found,]
View(exist)
account <- ws$KODE %in% to_find$KODE
the_exist <- ws[account,]
View(the_exist)
ws <- read.csv("WS.csv")
to_find <- read.csv("FIND.csv")
account <- ws$KODE %in% to_find$KODE
the_exist <- ws[account,]
View(the_exist)
ws <- read.csv("WS.csv")
to_find <- read.csv("FIND.csv")
account <- ws$KODE %in% to_find$KODE
the_exist <- ws[account,]
View(the_exist)
ordered <- the_exist[order(KODE),]
View(the_exist)
ordered <- the_exist[order(the_exist$KODE),]
View(ordered)
library(tidyverse)
new <- select(ordered$KODE, ordered$COA, ordered$NAMA)
new <- ordered.select(KODE, COA, NAMA)
write_excel_csv(ordered,)
write_excel_csv(ordered,"final")
write_csv(ordered,"final")
write_csv(ordered,"final.csv")
ws <- read.csv("WS.csv")
to_find <- read.csv("FIND.csv")
found <- to_find$KODE %in% ws$KODE
table(found)
account <- ws$KODE %in% to_find$KODE
the_exist <- ws[account,]
ordered <- the_exist[order(the_exist$KODE),]
write_csv(ordered,"final.csv")
?filter
?filter
samping <- dcast(ordered, KODE~NAMA, fill=0)
library(tidyverse)
library(reshape2)
install.packages("reshape2")
library(tidyverse)
library(reshape2)
samping <- dcast(ordered, KODE~NAMA, fill=0)
View(samping)
write_csv(samping,"nama.csv")
tb <- read.csv("TB.csv")
library(tidyverse)
tb <- read.csv("TB.csv")
View(tb)
data <- read.csv("TB.csv")
data <- read.csv("TB.csv")
tb <- data
tb$Reference <- strtrim(tb$Reference, 6)
summary(tb)
tb$Reference <- strtrim(tb$Reference, 6)
tb$Reference <- as.numeric(tb$Reference)
summary(tb)
data <- read.csv("TB.csv")
tb <- data
tb$Reference <- strtrim(tb$Reference, 6)
#tb$Reference <- as.numeric(tb$Reference)
tb$Reference <- strtrim(tb$Reference, 6)
tb$Mutasi <- as.numeric(tb$Mutasi)
data <- read.csv("TB.csv")
tb <- data
tb$Reference <- strtrim(tb$Reference, 6)
#tb$Mutasi <- as.numeric(tb$Mutasi)
tb$Reference <- strtrim(tb$Reference, 6)
tb$Mutasi <- strtoi(tb$Mutasi)
data <- read.csv("TB.csv")
tb <- data
tb$Reference <- strtrim(tb$Reference, 6)
tb$Mutasi <- strtoi(tb$Mutasi)
data <- read.csv("TB.csv")
tb <- data
data <- read.csv("TB.csv")
tb <- data
tb$Reference <- strtrim(tb$Reference, 6)
tb$Mutasi <- strtoi(tb$Mutasi)
summary(tb)
combin <- tb %>%
group_by(Acc.No., Acc.Name , Reference) %>%
summarize(sum())
combin <- tb %>%
group_by(Acc.No., Acc.Name, Reference) %>%
summarize(sum())
View(data)
data <- read.csv("TB.csv")
tb <- data
tb$Reference <- strtrim(tb$Reference, 6)
summary(tb)
combin <- tb %>%
group_by(Acc.No., Acc.Name, Reference) %>%
summarize(sum())
View(combin)
combin <- tb %>%
group_by(Acc.No., Acc.Name, Reference) %>%
summarize(Opening = sum(Opening.Balance), Debit = sum(Debit), Credit = sum(Credit), Mutasi = sum(Mutasi), Closing = sum(Closing.Balance))
write.csv(combin, "Combined_TB.csv")
library(tidyverse)
ctb <- read.csv("Combined_TB.csv")
ctb <- read.csv("Combined_TB.csv")
ws <- read.csv("WS.csv")
View(ctb)
View(ws)
new <- ctb
#new$COA <- paste()
new <- ctb
new$COA <- paste(new$Acc.No., "-", new$Reference)
View(new)
?paste
ctb <- read.csv("Combined_TB.csv")
ws <- read.csv("WS.csv")
new <- ctb
new$COA <- paste(new$Acc.No., "-", new$Reference, sep = "")
result <- merge(new, ws, by.x = COA, by.y = COA)
result <- merge(new, ws, by.x = "COA", by.y = "COA")
View(result)
ctb <- read.csv("Combined_TB.csv")
ws <- read.csv("WS.csv")
map <- read.csv("map.csv")
View(map)
ctb <- read.csv("Combined_TB.csv")
ws <- read.csv("WS.csv")
map <- read.csv("map.csv")
result <- merge(map, ws, by.x = "No.akun", by.y = "COA")
View(result)
View(map)
View(map)
result <- merge(map, ws, by.x = "No.akun", by.y = "COA", all.x = TRUE, all.y = FALSE)
ctb <- read.csv("Combined_TB.csv")
ws <- read.csv("WS.csv")
map <- read.csv("map.csv")
new <- ctb
new$COA <- paste(new$Acc.No., "-", new$Reference, sep = "")
result <- merge(map, ws, by.x = "No.akun", by.y = "COA", all.x = TRUE, all.y = FALSE)
result <- merge(map, ws, by.x = "No.akun", by.y = "COA", all.x = TRUE, all.y = FALSE)
result <- select(result, No.akun, AKUN, No.mapping, X)
write.csv(result, "MapbyWS.csv")
library(tidyverse)
to_find <- read.csv("to_find.csv")
gl <- read.csv("gl.csv")
View(gl)
View(to_find)
View(gl)
gl$COA.AST <- paste(gl$COA, strtrim(gl$Ref,6))
gl$COA.AST <- paste(gl$COA, strtrim(gl$Ref,6), sep = "-")
found <- to_find$COA.AST %in% gl$COA.AST
found <- gl$COA.AST %in% to_find$COA.AST
here <- gl[found,]
found <- gl$COA.AST %in% to_find$COA.AST
table(found)
View(here)
library(tidyverse)
library(writexl)
library(tidyverse)
install.packages("writexl")
library(writexl)
library(tidyverse)
library(writexl)
write_xlsx(here, "gl_sampling_entry.xlsx")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
library(writexl)
to_find <- read.csv("to_find.csv")
gl <- read.csv("gl_jan_sep.csv")
gl$COA.AST <- paste(gl$COA, strtrim(gl$Ref,6), sep = "-")
found <- gl$COA.AST %in% to_find$COA.AST
table(found)
here <- gl[found,]
write_xlsx(here, "gl_sampling_entry.xlsx")
to_find <- read.csv("to_find.csv")
gl <- read.csv("gl_oct_des.csv")
gl$COA.AST <- paste(gl$COA, strtrim(gl$Ref,6), sep = "-")
found <- gl$COA.AST %in% to_find$COA.AST
table(found)
to_find <- read.csv("to_find.csv")
gl <- read.csv("gl_jan_sept.csv")
to_find <- read.csv("to_find.csv")
gl <- read.csv("gl_jan_sep.csv")
gl$COA.AST <- paste(gl$COA, strtrim(gl$Ref,6), sep = "-")
found <- gl$COA.AST %in% to_find$COA.AST
table(found)
to_find <- read.csv("to_find.csv")
gl_1_9 <- read.csv("gl_jan_sep.csv")
gl_10_12 <- read.csv("gl_oct_desc.csv")
to_find <- read.csv("to_find.csv")
gl_1_9 <- read.csv("gl_jan_sep.csv")
gl_10_12 <- read.csv("gl_oct_des.csv")
gl_1_9$COA.AST <- paste(gl_1_9$COA, strtrim(gl_1_9$Ref,6), sep = "-")
gl_10_12$COA.AST <- paste(gl_10_12$COA, strtrim(gl_10_12$Ref,6), sep = "-")
found1 <- gl_1_9$COA.AST %in% to_find$COA.AST
table(found1)
found2 <- gl_10_12$COA.AST %in% to_find$COA.AST
table(found2)
here1 <- gl_1_9[found1,]
here2 <- gl_10_12[found2,]
write_xlsx(here1, "gl_samp_jan_sep.xlsx")
write_xlsx(here1, "gl_samp_oct_des.xlsx")
write_xlsx(here1, "gl_samp_jan_sep.xlsx")
write_xlsx(here2, "gl_samp_oct_des.xlsx")
View(gl_10_12)
View(gl_1_9)
gl_10_12 <- select(gl_10_12, -Project)
View(gl_10_12)
gl_10_12 <- select(gl_10_12, -Project)
#gl_10_12 <- select(gl_10_12, -Project)
gl <- rbind(gl_10_12, gl_1_9)
View(gl_1_9)
to_find <- read.csv("to_find.csv")
gl_1_9 <- read.csv("gl_jan_sep.csv")
gl_10_12 <- read.csv("gl_oct_des.csv")
gl_1_9$COA.AST <- paste(gl_1_9$COA, strtrim(gl_1_9$Ref,6), sep = "-")
gl_10_12$COA.AST <- paste(gl_10_12$COA, strtrim(gl_10_12$Ref,6), sep = "-")
found1 <- gl_1_9$COA.AST %in% to_find$COA.AST
table(found1)
found2 <- gl_10_12$COA.AST %in% to_find$COA.AST
table(found2)
here1 <- gl_1_9[found1,]
here2 <- gl_10_12[found2,]
write_xlsx(here1, "gl_samp_jan_sep.xlsx")
write_xlsx(here2, "gl_samp_oct_des.xlsx")
gl_10_12 <- select(gl_10_12, -Project)
gl_1_9 <- select(gl_1_9, -No.)
gl <- rbind(gl_10_12, gl_1_9)
View(gl)
summ <- gl %>%
group_by(COA.AST) %>%
summarise(sum(Ending.Balance) = "Ending.Balance")
summ <- gl %>%
group_by(COA.AST) %>%
summarise("Ending.Balance"= sum(Ending.Balance))
View(summ)
found3 <- summ$COA.AST %in% to_find$COA.AST
table(found3)
write_xlsx(gl[found3,], "check.xlsx")
found3 <- summ$COA.AST %in% to_find$COA.AST
table(found3)
write_xlsx(summ[found3,], "check.xlsx")
search <- c(90199, 90111)
got <- gl_1_9$COA %in% search
table(got)
search <- c(90199, 90111, 90101, 90102)
got <- gl_1_9$COA %in% search
table(got)
search <- c(90199, 90111, 90101, 90102)
got <- gl_1_9$COA %in% search
table(got)
write_xlsx(gl_1_9[got,], "search_coa.xlsx")
search <- c(90199, 90111, 90101, 90102)
got <- gl_1_9$COA %in% search
table(got)
write_xlsx(gl_1_9[got,], "search_coa.xlsx")
search <- c(90199, 90111, 90101, 90102, 90180)
got <- gl_1_9$COA %in% search
table(got)
write_xlsx(gl_1_9[got,], "search_coa.xlsx")
search <- c(90199, 90111, 90101, 90102, 90180)
got <- gl_1_9$COA %in% search
table(got)
write_xlsx(gl_1_9[got,], "search_coa.xlsx")
search <- c(90199, 90111, 90101, 90102)
got <- gl_1_9$COA %in% search
table(got)
write_xlsx(gl_1_9[got,], "search_coa.xlsx")
search <- c(90199, 90111, 90101, 90102)
got <- gl_1_9$COA %in% search
table(got)
write_xlsx(gl_1_9[got,], "search_coa.xlsx")
search <- c(90199, 90111, 90101, 90102, 90180)
got <- gl_1_9$COA %in% search
table(got)
write_xlsx(gl_1_9[got,], "search_coa.xlsx")
search <- c(90199, 90111, 90101, 90102, 90180, 90198)
got <- gl_1_9$COA %in% search
table(got)
write_xlsx(gl_1_9[got,], "search_coa.xlsx")
write_xlsx(gl, "gl_jan_des.csv")
write.csv(gl, "gl_jan_des.csv")
source("~/.active-rstudio-document", echo=TRUE)
ws <- read_csv("ws_des_21.csv")
gl <- read_csv("gl_jan_des.csv")
View(gl)
summed <- gl %>%
group_by(COA.AST) %>%
summarise(balance = sum(Ending.Balance))
View(summed)
summed <- gl %>%
group_by(COA.AST) %>%
summarise(balance = sum(Ending.Balance))
write_xlsx(summed, "gl_totalled.xlsx")
here <- gl$COA.AST %in% summed$COA.AST
table(here)
library(tidyverse)
library(writexl)
ws <- read_csv("ws_des_21.csv")
gl <- read_csv("gl_jan_des.csv")
summed <- gl %>%
group_by(COA.AST) %>%
summarise(balance = sum(Ending.Balance))
write_xlsx(summed, "gl_totalled.xlsx")
here <- gl$COA.AST %in% summed$COA.AST
table(here)
View(ws)
here2 <- summed$COA.AST %in% gl$COA.AST
table(here2)
here <- ws$COA.AST %in% summed$COA.AST
table(here)
in_gl <- ws[here,]
in_gl$ws_coa <- ws$COA.AST
in_gl <- ws[here,]
compare$ws_coa <- in_gl$COA.AST
in_gl <- ws[here,]
compare <- gl
compare$ws_coa <- in_gl$COA.AST
compare <- left_join(ws, summed, by.x = COA.AST, by.y = COA.AST)
View(compare)
compare <- left_join(ws, summed, by.x = COA.AST, by.y = COA.AST)
write_xlsx(compare, "compared.xlxs")
compare <- left_join(ws, summed, by.x = COA.AST, by.y = COA.AST)
write_xlsx(compare, "compared.xlsx")
library(tidyverse)
mandatory <- read_csv("mandatory_list.csv")
non_mandatory <- read_csv("non_mandatory_list.csv")
pk_12 <- read_csv("pk_12.csv")
here <- pk_12$Nama %in% non_mandatory$Nama
here <- pk_12$Nama %in% non_mandatory$Nama
result <- pk_12[here,]
View(result)
here <- pk_12$Nama %in% non_mandatory$Nama
result <- pk_12[here,]
not_result <- pk_12[!here,]
View(not_result)
View(mandatory)
View(non_mandatory)
mandatory <- read_csv("mandatory_list.csv")
non_mandatory <- read_csv("non_mandatory_list.csv")
pk_12 <- read_csv("pk_12.csv")
here <- pk_12$Nama %in% non_mandatory$Nama
result <- pk_12[here,]
not_result <- pk_12[!here,]
here <- pk_12$Nama %in% non_mandatory$Nama
result <- pk_12[here,]
not_result <- pk_12[!here,]
another <- pk_12$Nama %in% mandatory$Nama
ano_result <- pk_12[another,]
ano_not_result <- pk_12[!another,]
another <- pk_12$Nama %in% mandatory$`Nama Cert`
ano_result <- pk_12[another,]
ano_not_result <- pk_12[!another,]
View(ano_not_result)
another <- pk_12$Nama %in% mandatory$`Nama Cert`
ano_result <- pk_12[!another,]
ano_not_result <- pk_12[another,]
View(ano_result)
library(tidyverse)
library(writexl)
mandatory <- read_csv("mandatory_list.csv")
non_mandatory <- read_csv("non_mandatory_list.csv")
pk_12 <- read_csv("pk_12.csv")
write_xlsx(ano_result, "final.xlsx")
library(tidyverse)
data <- read_csv("data.csv")
View(data)
result <- data %>%
group_by(ASOSIASI, LJK) %>%
summarise('COUNT' = count(LJK))
the_data <- data
the_data$county <- 1
result <- the_data %>%
group_by(ASOSIASI, LJK) %>%
summarise(county = count(county))
the_data <- data
the_data$county <- 1
result <- the_data %>%
group_by(ASOSIASI, LJK) %>%
summarise(county = sum(county))
View(result)
the_data <- data
the_data$county <- 1
result <- the_data %>%
group_by(ASOSIASI) %>%
summarise(county = sum(county))
library(tidyverse)
library(writexl)
write_xlsx(result, "result.xlsx")
the_data <- data
grouped_data <- the_data %>%
group_by(ASOSIASI, LJK)
View(grouped_data)
the_data <- data
grouped_data <- the_data %>%
group_by(ASOSIASI, LJK) %>%
summarise()
View(grouped_data)
the_data <- data
grouped_data <- the_data %>%
group_by(ASOSIASI, LJK) %>%
summarise() %>%
na.omit()
the_data <- data
grouped_data <- the_data %>%
group_by(ASOSIASI, LJK) %>%
summarise() %>%
na.omit()
result <- grouped_data %>%
group_by(ASOSIASI) %>%
summarise(county = count(LJK))
the_data <- data
grouped_data <- the_data %>%
group_by(ASOSIASI, LJK) %>%
summarise() %>%
na.omit()
grouped_data$county <- 1
result <- grouped_data %>%
group_by(ASOSIASI) %>%
summarise(county = sum(county))
write_xlsx(result, "result.xlsx")
install.packages('tidyverse')
install.packages('tidyverse')
View(data)
# create dataframe
data <- data.frame("a" = c(0,0,1,1), "b" = c(1, 1, 0, 1))
# sum rows
data$srow <- rowSums(data)
View(data)
# sum cols
sum(data)
# sum cols
colSums(data)
# create dataframe
data <- data.frame("a" = c(1,2,3,4), "b" = c(10, 20, 30, 40))
# barplot
barplot(data, "b", "a")
# barplot
barplot(data)
# barplot
barplot(data$b, names.arg = data$a)
# barplot
barplot(data$Hari,
names.arg = data$Pasien,
xlab = "Pasien ID",
ylab = "Hari", horiz = TRUE
)
# create dataframe
data <- data.frame("Pasien" = c(1,2,3,4), "Hari" = c(10, 20, 30, 40))
# barplot
barplot(data$Hari,
names.arg = data$Pasien,
xlab = "Pasien ID",
ylab = "Hari",
horiz = TRUE
)
# barplot
barplot(data$Hari,
names.arg = data$Pasien,
xlab = "Hari",
ylab = "Pasien ID",
horiz = TRUE
)
shiny::runApp('Desktop/GitHub/M_D_Australia/App')
library(leaflet)
library(htmlwidgets)
m <- leaflet(data.frame(lat = 55.71654, lng = 12.47484))
m <-  addCircles(m, popup = "testpopup")
m <-  addTiles(m)
m
saveWidget(m, file="testmap.html", selfcontained = TRUE)
library(leaflet)
library(htmlwidgets)
m <- leaflet(data.frame(lat = 55.71654, lng = 12.47484))
m <-  addCircles(m, popup = "testpopup")
m <-  addTiles(m)
m
saveWidget(m, file="testmap.html", selfcontained = TRUE)
?readOGR
??readOGR
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(ozmaps)
install.packages("ozmaps")
install.packages(c("backports", "blob", "brew", "brio", "broom", "bslib", "Cairo", "callr", "car", "clipr", "cluster", "commonmark", "credentials", "crosstalk", "DBI", "dbplyr", "desc", "devtools", "dtplyr", "e1071", "evaluate", "farver", "flexmix", "fontawesome", "future", "future.apply", "generics", "gert", "globals", "h2o", "hardhat", "haven", "htmltools", "httpuv", "httr", "ipred", "jsonlite", "kernlab", "knitr", "leaflet", "lme4", "lubridate", "MASS", "Matrix", "memoise", "mgcv", "mime", "mnormt", "nlme", "nloptr", "openssl", "parallelly", "pdftools", "pillar", "pkgbuild", "pkgload", "processx", "progressr", "proxy", "ps", "psych", "qpdf", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "readr", "readxl", "recipes", "remotes", "rgdal", "rlang", "rmarkdown", "roxygen2", "rpart.plot", "rprojroot", "rvest", "sass", "sessioninfo", "shiny", "sp", "stringi", "survival", "testthat", "tibble", "tidyverse", "timeDate", "tinytex", "tzdb", "usethis", "uuid", "viridis", "vroom", "waldo", "xfun", "xml2", "yaml"))
install.packages(c("backports", "blob", "brew", "brio", "broom", "bslib", "Cairo", "callr", "car", "clipr", "cluster", "commonmark", "credentials", "crosstalk", "DBI", "dbplyr", "desc", "devtools", "dtplyr", "e1071", "evaluate", "farver", "flexmix", "fontawesome", "future", "future.apply", "generics", "gert", "globals", "h2o", "hardhat", "haven", "htmltools", "httpuv", "httr", "ipred", "jsonlite", "kernlab", "knitr", "leaflet", "lme4", "lubridate", "MASS", "Matrix", "memoise", "mgcv", "mime", "mnormt", "nlme", "nloptr", "openssl", "parallelly", "pdftools", "pillar", "pkgbuild", "pkgload", "processx", "progressr", "proxy", "ps", "psych", "qpdf", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "readr", "readxl", "recipes", "remotes", "rgdal", "rlang", "rmarkdown", "roxygen2", "rpart.plot", "rprojroot", "rvest", "sass", "sessioninfo", "shiny", "sp", "stringi", "survival", "testthat", "tibble", "tidyverse", "timeDate", "tinytex", "tzdb", "usethis", "uuid", "viridis", "vroom", "waldo", "xfun", "xml2", "yaml"))
install.packages(c("backports", "blob", "brew", "brio", "broom", "bslib", "Cairo", "callr", "car", "clipr", "cluster", "commonmark", "credentials", "crosstalk", "DBI", "dbplyr", "desc", "devtools", "dtplyr", "e1071", "evaluate", "farver", "flexmix", "fontawesome", "future", "future.apply", "generics", "gert", "globals", "h2o", "hardhat", "haven", "htmltools", "httpuv", "httr", "ipred", "jsonlite", "kernlab", "knitr", "leaflet", "lme4", "lubridate", "MASS", "Matrix", "memoise", "mgcv", "mime", "mnormt", "nlme", "nloptr", "openssl", "parallelly", "pdftools", "pillar", "pkgbuild", "pkgload", "processx", "progressr", "proxy", "ps", "psych", "qpdf", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "readr", "readxl", "recipes", "remotes", "rgdal", "rlang", "rmarkdown", "roxygen2", "rpart.plot", "rprojroot", "rvest", "sass", "sessioninfo", "shiny", "sp", "stringi", "survival", "testthat", "tibble", "tidyverse", "timeDate", "tinytex", "tzdb", "usethis", "uuid", "viridis", "vroom", "waldo", "xfun", "xml2", "yaml"))
install.packages(c("backports", "blob", "brew", "brio", "broom", "bslib", "Cairo", "callr", "car", "clipr", "cluster", "commonmark", "credentials", "crosstalk", "DBI", "dbplyr", "desc", "devtools", "dtplyr", "e1071", "evaluate", "farver", "flexmix", "fontawesome", "future", "future.apply", "generics", "gert", "globals", "h2o", "hardhat", "haven", "htmltools", "httpuv", "httr", "ipred", "jsonlite", "kernlab", "knitr", "leaflet", "lme4", "lubridate", "MASS", "Matrix", "memoise", "mgcv", "mime", "mnormt", "nlme", "nloptr", "openssl", "parallelly", "pdftools", "pillar", "pkgbuild", "pkgload", "processx", "progressr", "proxy", "ps", "psych", "qpdf", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "readr", "readxl", "recipes", "remotes", "rgdal", "rlang", "rmarkdown", "roxygen2", "rpart.plot", "rprojroot", "rvest", "sass", "sessioninfo", "shiny", "sp", "stringi", "survival", "testthat", "tibble", "tidyverse", "timeDate", "tinytex", "tzdb", "usethis", "uuid", "viridis", "vroom", "waldo", "xfun", "xml2", "yaml"))
install.packages(c("backports", "blob", "brew", "brio", "broom", "bslib", "Cairo", "callr", "car", "clipr", "cluster", "commonmark", "credentials", "crosstalk", "DBI", "dbplyr", "desc", "devtools", "dtplyr", "e1071", "evaluate", "farver", "flexmix", "fontawesome", "future", "future.apply", "generics", "gert", "globals", "h2o", "hardhat", "haven", "htmltools", "httpuv", "httr", "ipred", "jsonlite", "kernlab", "knitr", "leaflet", "lme4", "lubridate", "MASS", "Matrix", "memoise", "mgcv", "mime", "mnormt", "nlme", "nloptr", "openssl", "parallelly", "pdftools", "pillar", "pkgbuild", "pkgload", "processx", "progressr", "proxy", "ps", "psych", "qpdf", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "readr", "readxl", "recipes", "remotes", "rgdal", "rlang", "rmarkdown", "roxygen2", "rpart.plot", "rprojroot", "rvest", "sass", "sessioninfo", "shiny", "sp", "stringi", "survival", "testthat", "tibble", "tidyverse", "timeDate", "tinytex", "tzdb", "usethis", "uuid", "viridis", "vroom", "waldo", "xfun", "xml2", "yaml"))
